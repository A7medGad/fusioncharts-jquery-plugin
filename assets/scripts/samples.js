var sampleConfig =
{
  "simple-chart": {
    "code": "/**\n * Assuming you have installed fusioncharts using npm\n * Following code snippet can be used\n*/\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts.\nFusionTheme(FusionCharts);  // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n$('document').ready(function () {\n  $('#chart-container').insertFusionCharts({\n    type: 'column2d',\n    width: '600',\n    height: '400',\n    dataFormat: 'json',\n    dataSource:  { /* see data tab */ }    \n  });\n});\n\n/* \nNOTE: \n  * In case you downloaded fusioncharts in zipped format\n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');\n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');\n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\n        \"subCaption\": \"In MMbbl = One Million barrels\",\n        \"xAxisName\": \"Country\",\n        \"yAxisName\": \"Reserves (MMbbl)\",\n        \"numberSuffix\": \"K\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Venezuela\",\n            \"value\": \"290\"\n        },\n        {\n            \"label\": \"Saudi\",\n            \"value\": \"260\"\n        },\n        {\n            \"label\": \"Canada\",\n            \"value\": \"180\"\n        },\n        {\n            \"label\": \"Iran\",\n            \"value\": \"140\"\n        },\n        {\n            \"label\": \"Russia\",\n            \"value\": \"115\"\n        },\n        {\n            \"label\": \"UAE\",\n            \"value\": \"100\"\n        },\n        {\n            \"label\": \"US\",\n            \"value\": \"30\"\n        },\n        {\n            \"label\": \"China\",\n            \"value\": \"30\"\n        }\n    ]\n}"
  },
  "3d-pie-chart": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts.\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts.\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts.\n\n$('document').ready(function () {\n  $('#chart-container').insertFusionCharts({        \n    type: 'pie3d',\n    width: '600',\n    height: '400',\n    dataFormat: 'json',\n    dataSource: { /* see data tab */ }\n  });\n});\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/\n\n",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Recommended Portfolio Split\",\r\n        \"subCaption\" : \"For a net-worth of $1M\",\r\n        \"showValues\":\"1\",\r\n        \"showPercentInTooltip\" : \"0\",\r\n        \"numberPrefix\" : \"$\",\r\n        \"enableMultiSlicing\":\"1\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Equity\",\r\n            \"value\": \"300000\"\r\n        }, {\r\n            \"label\": \"Debt\",\r\n            \"value\": \"230000\"\r\n        }, {\r\n            \"label\": \"Bullion\",\r\n            \"value\": \"180000\"\r\n        }, {\r\n            \"label\": \"Real-estate\",\r\n            \"value\": \"270000\"\r\n        }, {\r\n            \"label\": \"Insurance\",\r\n            \"value\": \"20000\"\r\n        }\r\n    ]\r\n}\r\n"
  },
  "column-line-area-combi-chart": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts.\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts.\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts.\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        type: 'mscombi2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: { /* see data tab */ }\n    });\n});\n\n/* \n  NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Expense Analysis\",\r\n        \"subCaption\": \"ACME Inc.\",\r\n        \"xAxisname\": \"Region\",\r\n        \"yAxisName\": \"Amount (In USD)\",\r\n        \"numberPrefix\": \"$\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"categories\": [\r\n        {\r\n            \"category\": [\r\n                {\r\n                    \"label\": \"East\"\r\n                },\r\n                {\r\n                    \"label\": \"West\"\r\n                },\r\n                {\r\n                    \"label\": \"South\"\r\n                },\r\n                {\r\n                    \"label\": \"North\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"dataset\": [\r\n        {\r\n            \"seriesName\": \"Actual Expenses\",\r\n            \"data\": [\r\n                {\r\n                    \"value\": \"1441290\"\r\n                },\r\n                {\r\n                    \"value\": \"855912\"\r\n                },\r\n                {\r\n                    \"value\": \"911404\"\r\n                },\r\n                {\r\n                    \"value\": \"648136\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"seriesName\": \"Budgeted Expenses\",\r\n            \"renderAs\": \"line\",\r\n            \"data\": [\r\n                {\r\n                    \"value\": \"1297430\"\r\n                },\r\n                {\r\n                    \"value\": \"776485\"\r\n                },\r\n                {\r\n                    \"value\": \"685352\"\r\n                },\r\n                {\r\n                    \"value\": \"726791\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"seriesName\": \"Unknown Liabilities\",\r\n            \"renderAs\": \"area\",\r\n            \"showAnchors\" : \"0\",\r\n            \"data\": [\r\n                {\r\n                    \"value\": \"143860\"\r\n                },\r\n                {\r\n                    \"value\": \"79427\"\r\n                },\r\n                {\r\n                    \"value\": \"226052\"\r\n                },\r\n                {\r\n                    \"value\": \"78655\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n"
  },
  "fetch-data-from-json-url": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve fusioncharts for the charts module.\nFusionTheme(FusionCharts); // Resolve fusioncharts for the fusion theme module.\njQueryFusionCharts(FusionCharts); // Resolve fusioncharts for the jQuery Plugin.\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        type: 'column2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'jsonurl', // <-- `jsonurl` implies that `dataSource` specified is a URL which respond with JSON data\n        dataSource: 'data.json'\n    });\n});\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n        \"subCaption\": \"In MMbbl = One Million barrels\",\r\n        \"xAxisName\": \"Country\",\r\n        \"yAxisName\": \"Reserves (MMbbl)\",\r\n        \"numberSuffix\": \"K\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n"
  },
  "fetch-data-from-xml-url": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        type: 'column2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'xmlurl', // <- `xmlurl` implies that `dataSource` provided is the URL which responds with xml data.\n        dataSource: 'data.xml'\n    });\n});\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>",
    "data": "<chart caption=\"Countries With Most Oil Reserves [2017-18]\" subcaption=\"In MMbbl = One Million barrels\" xaxisname=\"Country\" yaxisname=\"Reserves (MMbbl)\" numbersuffix=\"K\" theme=\"fusion\">\r\n    <set label=\"Venezuela\" value=\"290\" \/>\r\n    <set label=\"Saudi\" value=\"260\" \/>\r\n    <set label=\"Canada\" value=\"180\" \/>\r\n    <set label=\"Iran\" value=\"140\" \/>\r\n    <set label=\"Russia\" value=\"115\" \/>\r\n    <set label=\"UAE\" value=\"100\" \/>\r\n    <set label=\"US\" value=\"30\" \/>\r\n    <set label=\"China\" value=\"30\" \/>\r\n<\/chart>\r\n"
  },
  "update-chart-data": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n$('document').ready(function () {\n    var dataSource = { /* see data tab */ };\n    $('#chart-container').insertFusionCharts({\n      type: 'column2d',\n      width: '600',\n      height: '400',\n      dataFormat: 'json',\n      dataSource: dataSource\n    });\n\n    /*\n      Get a random number from 50 to 300\n    */\n    function getRandomNumber() {\n      var max = 300, min = 50;\n      return Math.round(((max - min) * Math.random()) + min);\n    }\n\n    // Data update handler code\n    $('#update').click(function() {\n      var dataArrayNew = $.extend({}, dataSource);\n      dataArrayNew.data[2].value = getRandomNumber();\n      dataArrayNew.data[3].value = getRandomNumber();\n        $('#chart-container').updateFusionCharts({\n          dataSource: dataArrayNew\n        });\n    });\n});\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>\n<div id=\"btn-container\">\n    <button id=\"update\" class=\"btn btn-outline-secondary btn-sm\">CHANGE CHART DATA</button>\n</div>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n        \"subCaption\": \"In MMbbl = One Million barrels\",\r\n        \"xAxisName\": \"Country\",\r\n        \"yAxisName\": \"Reserves (MMbbl)\",\r\n        \"numberSuffix\": \"K\",\r\n        \"theme\": \"fusion\",\r\n        \"updateAnimDuration\":\"0.4\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n"
  },
  "update-chart-attributes": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n$('document').ready(function () {\n    var dataSource = { /* see data tab */ },\n        dataSourceCopy = JSON.parse(JSON.stringify(dataSource));\n    // chart-container - id of the container where fusioncharts will render\n    $('#chart-container').insertFusionCharts({ \n        type: 'column2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: dataSource\n    });\n\n\n    // Data update handler code\n    var btnBG = $('#change-background'),\n        btnCA = $('#change-caption-alignment'),\n        btnReset = $('#reset-chart');\n\n    btnBG.click(function() {\n        var dataArrayNew = $.extend({}, dataSource);\n        dataArrayNew.chart.bgColor = '#efefef';\n        $('#chart-container').updateFusionCharts({\n            dataFormat: 'json',\n            dataSource: dataArrayNew\n        });\n    });\n\n    btnCA.click(function() {\n        var dataArrayNew = $.extend({}, dataSource);\n        dataArrayNew.chart.captionAlignment = 'left';\n        $('#chart-container').updateFusionCharts({\n            dataFormat: 'json',\n            dataSource: dataArrayNew\n        });\n    });\n\n    btnReset.click(function() {\n        var dataArrayNew = JSON.parse(JSON.stringify(dataSourceCopy));\n        dataSource = JSON.parse(JSON.stringify(dataSourceCopy));\n        $('#chart-container').updateFusionCharts({\n            dataFormat: 'json',\n            dataSource: dataArrayNew\n        });\n    });\n});\n\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>\n<div id=\"btn-container\">\n    <button class=\'btn btn-outline-secondary btn-sm\' id=\"change-background\">Change Background</button>\n    <button class=\'btn btn-outline-secondary btn-sm\' id=\"change-caption-alignment\">Change Caption Alignment</button>\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"reset-chart\">Reset</button>\n</div>",
    "data": "{\r\n    \"chart\": {\r\n      \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n      \"subCaption\": \"In MMbbl = One Million barrels\",\r\n      \"xAxisName\": \"Country\",\r\n      \"yAxisName\": \"Reserves (MMbbl)\",\r\n      \"numberSuffix\": \"K\",\r\n      \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n"
  },
  "trigger-events-from-chart": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        type: 'column2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: { /* see data tab */ }\n    });\n    \n    // Adding dataplotrollover event to chart\n    $('#chart-container').bind('fusionchartsdataplotrollover', function (event, args) {\n        $('#message').html('You are currently hovering over <b>' + args.categoryLabel +\n            '</b> whose value is <b>' + args.displayValue + '</b>');\n    });\n\n    // Adding dataplotrollout event to chart\n    $('#chart-container').bind('fusionchartsdataplotrollout', function (event, args) {\n        $('#message').html('Hover on the plot to see the value along with the label');\n    });\n});\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>\n<p style=\"padding: 10px; background: rgb(245, 242, 240);\" id=\'message\'>\n    Hover on the plot to see the value along with the label\n</p>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\n        \"subCaption\": \"In MMbbl = One Million barrels\",\n        \"xAxisName\": \"Country\",\n        \"yAxisName\": \"Reserves (MMbbl)\",\n        \"numberSuffix\": \"K\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Venezuela\",\n            \"value\": \"290\"\n        },\n        {\n            \"label\": \"Saudi\",\n            \"value\": \"260\"\n        },\n        {\n            \"label\": \"Canada\",\n            \"value\": \"180\"\n        },\n        {\n            \"label\": \"Iran\",\n            \"value\": \"140\"\n        },\n        {\n            \"label\": \"Russia\",\n            \"value\": \"115\"\n        },\n        {\n            \"label\": \"UAE\",\n            \"value\": \"100\"\n        },\n        {\n            \"label\": \"US\",\n            \"value\": \"30\"\n        },\n        {\n            \"label\": \"China\",\n            \"value\": \"30\"\n        }\n    ]\n}"
  },
  "percentage-calculation": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n$('document').ready(function () {\n    var dataSource = { /* see data tab */ };\n    var total = dataSource.data.reduce(function(p, c){ \n      return p + Number(c.value);\n    }, 0);\n    \n\n    $('#chart-container').insertFusionCharts({\n        type: 'column2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: dataSource\n    });\n\n    // Adding dataplotrollover listener for the chart\n    $('#chart-container').bind('fusionchartsdataplotrollover', function (event, args) {\n        let value = (args.value / total * 100).toFixed(2);\n        $('#message').html('<b>' + args.categoryLabel + '</b> is <b>' + value +\n        '%</b> of top 8 oil reserve countries');\n    });\n\n    // Adding dataplotrollout listener for the chart\n    $('#chart-container').bind('fusionchartsdataplotrollout', function (event, args) {\n        $('#message').html('Hover on the plot to see the percentage along with the label');\n    });\n});\n\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>\n<p style=\"padding: 10px; background: rgb(245, 242, 240);\" id=\'message\'>\n    Hover on the plot to see the percentage along with the label\n</p>",
    "data": "{\r\n  \"chart\": {\r\n      \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n      \"subCaption\": \"In MMbbl = One Million barrels\",\r\n      \"xAxisName\": \"Country\",\r\n      \"yAxisName\": \"Reserves (MMbbl)\",\r\n      \"numberSuffix\": \"K\",\r\n      \"theme\": \"fusion\"\r\n  },\r\n  \"data\": [\r\n      {\r\n          \"label\": \"Venezuela\",\r\n          \"value\": \"290\"\r\n      },\r\n      {\r\n          \"label\": \"Saudi\",\r\n          \"value\": \"260\"\r\n      },\r\n      {\r\n          \"label\": \"Canada\",\r\n          \"value\": \"180\"\r\n      },\r\n      {\r\n          \"label\": \"Iran\",\r\n          \"value\": \"140\"\r\n      },\r\n      {\r\n          \"label\": \"Russia\",\r\n          \"value\": \"115\"\r\n      },\r\n      {\r\n          \"label\": \"UAE\",\r\n          \"value\": \"100\"\r\n      },\r\n      {\r\n          \"label\": \"US\",\r\n          \"value\": \"30\"\r\n      },\r\n      {\r\n          \"label\": \"China\",\r\n          \"value\": \"30\"\r\n      }\r\n  ]\r\n}\r\n"
  },
  "export-charts": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts);// Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts);  // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts);  // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n$('document').ready(function () {\n    var btn = $('#export');\n    var columnData = { /* see data tab */ };\n    var stackedColumnData = { /* see data tab */ };\n\n    btn.on('click', function () {\n        FusionCharts.batchExport({\n            exportFormat: 'pdf'\n        });\n    });\n\n    $('#chart-container1').insertFusionCharts({\n        type: 'column2d',\n        width: 700,\n        height: 400,\n        dataFormat: 'json',\n        dataSource: columnData\n    });\n    $('#chart-container2').insertFusionCharts({\n        type: 'stackedcolumn2d',\n        width: 600,\n        height: 500,\n        dataFormat: 'json',\n        dataSource: stackedColumnData\n    });\n});\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container1\">\n    FusionCharts will render here\n</div>\n<div id=\"chart-container2\"></div>\n<div id=\"btn-container\">\n    <button id=\"export\" class=\"btn btn-outline-secondary btn-sm\">Export both charts as a single PDF</button>\n</div>",
    "data": "{\n    \"columnData\": {\n        \"chart\": {\n            \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\n            \"subCaption\": \"In MMbbl = One Million barrels\",\n            \"xAxisName\": \"Country\",\n            \"yAxisName\": \"Reserves (MMbbl)\",\n            \"numberSuffix\": \"K\",\n            \"theme\": \"fusion\"\n        },\n        \"data\": [\n            {\n                \"label\": \"Venezuela\",\n                \"value\": \"290\"\n            },\n            {\n                \"label\": \"Saudi\",\n                \"value\": \"260\"\n            },\n            {\n                \"label\": \"Canada\",\n                \"value\": \"180\"\n            },\n            {\n                \"label\": \"Iran\",\n                \"value\": \"140\"\n            },\n            {\n                \"label\": \"Russia\",\n                \"value\": \"115\"\n            },\n            {\n                \"label\": \"UAE\",\n                \"value\": \"100\"\n            },\n            {\n                \"label\": \"US\",\n                \"value\": \"30\"\n            },\n            {\n                \"label\": \"China\",\n                \"value\": \"30\"\n            }\n        ]\n    },\n    \"stackedColumnData\": {\n        \"chart\": {\n            \"caption\": \"Yearly Energy Production Rate\",\n            \"subCaption\": \" Top 5 Developed Countries\",\n            \"numbersuffix\": \" TWh\",\n            \"showSum\": \"1\",\n            \"plotToolText\": \"$label produces <b>$dataValue<\/b> of energy from $seriesName\",\n            \"theme\": \"fusion\"\n        },\n        \"categories\": [\n            {\n                \"category\": [\n                    {\n                        \"label\": \"Canada\"\n                    },\n                    {\n                        \"label\": \"China\"\n                    },\n                    {\n                        \"label\": \"Russia\"\n                    },\n                    {\n                        \"label\": \"Australia\"\n                    },\n                    {\n                        \"label\": \"United States\"\n                    },\n                    {\n                        \"label\": \"France\"\n                    }\n                ]\n            }\n        ],\n        \"dataSet\": [\n            {\n                \"seriesName\": \"Coal\",\n                \"data\": [\n                    {\n                        \"value\": \"400\"\n                    },\n                    {\n                        \"value\": \"830\"\n                    },\n                    {\n                        \"value\": \"500\"\n                    },\n                    {\n                        \"value\": \"420\"\n                    },\n                    {\n                        \"value\": \"790\"\n                    },\n                    {\n                        \"value\": \"380\"\n                    }\n                ]\n            },\n            {\n                \"seriesName\": \"Hydro\",\n                \"data\": [\n                    {\n                        \"value\": \"350\"\n                    },\n                    {\n                        \"value\": \"620\"\n                    },\n                    {\n                        \"value\": \"410\"\n                    },\n                    {\n                        \"value\": \"370\"\n                    },\n                    {\n                        \"value\": \"720\"\n                    },\n                    {\n                        \"value\": \"310\"\n                    }\n                ]\n            },\n            {\n                \"seriesName\": \"Nuclear\",\n                \"data\": [\n                    {\n                        \"value\": \"210\"\n                    },\n                    {\n                        \"value\": \"400\"\n                    },\n                    {\n                        \"value\": \"450\"\n                    },\n                    {\n                        \"value\": \"180\"\n                    },\n                    {\n                        \"value\": \"570\"\n                    },\n                    {\n                        \"value\": \"270\"\n                    }\n                ]\n            },\n            {\n                \"seriesName\": \"Gas\",\n                \"data\": [\n                    {\n                        \"value\": \"180\"\n                    },\n                    {\n                        \"value\": \"330\"\n                    },\n                    {\n                        \"value\": \"230\"\n                    },\n                    {\n                        \"value\": \"160\"\n                    },\n                    {\n                        \"value\": \"440\"\n                    },\n                    {\n                        \"value\": \"350\"\n                    }\n                ]\n            },\n            {\n                \"seriesName\": \"Oil\",\n                \"data\": [\n                    {\n                        \"value\": \"60\"\n                    },\n                    {\n                        \"value\": \"200\"\n                    },\n                    {\n                        \"value\": \"200\"\n                    },\n                    {\n                        \"value\": \"50\"\n                    },\n                    {\n                        \"value\": \"230\"\n                    },\n                    {\n                        \"value\": \"150\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n"
  },
  "drill-down": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve fusioncharts for the charts module.\nFusionTheme(FusionCharts); // Resolve fusioncharts for the fusion theme module.\njQueryFusionCharts(FusionCharts); // Resolve fusioncharts for the fusion theme module.\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        id: 'drill-down-chart', // <- ID provided to access the chart through FusionCharts class\n        type: 'column2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: { /* see data tab */ }\n    });\n\n    // FusionCharts.items holds all the chart instances with key as `id` provided in config\n    FusionCharts.items['drill-down-chart'].configureLink({\n        type: 'pie2d',\n        overlayButton: {\n            message: 'Back',\n            fontColor: '880000',\n            bgColor: 'FFEEEE',\n            borderColor: '660000',\n        }\n    }, 0);\n});\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Sales of top 3 juice flavors last year\",\n        \"subcaption\": \"Click on a column to see details\",\n        \"xaxisname\": \"Flavor\",\n        \"yaxisname\": \"Amount (In USD)\",\n        \"numberprefix\": \"$\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Apple\",\n            \"value\": \"810000\",\n            \"link\": \"newchart-xml-apple\"\n        },\n        {\n            \"label\": \"Cranberry\",\n            \"value\": \"620000\",\n            \"link\": \"newchart-xml-cranberry\"\n        },\n        {\n            \"label\": \"Grape\",\n            \"value\": \"350000\",\n            \"link\": \"newchart-xml-grape\"\n        }\n    ],\n    \"linkeddata\": [\n        {\n            \"id\": \"apple\",\n            \"linkedchart\": {\n                \"chart\": {\n                    \"caption\": \"Apple Juice - Quarterly Sales\",\n                    \"subcaption\": \"Last year\",\n                    \"numberprefix\": \"$\",\n                    \"theme\": \"fusion\",\n                    \"rotateValues\": \"0\",\n                    \"plottooltext\": \"$label, $dataValue,  $percentValue\"\n                },\n                \"data\": [{\n                    \"label\": \"Q1\",\n                    \"value\": \"157000\",\n                    \"displayValue\": \"Q1, $157K\"\n                }, {\n                    \"label\": \"Q2\",\n                    \"value\": \"172000\",\n                    \"displayValue\": \"Q2, $172K\"\n                }, {\n                    \"label\": \"Q3\",\n                    \"value\": \"206000\",\n                    \"displayValue\": \"Q3, $206K\"\n                }, {\n                    \"label\": \"Q4\",\n                    \"value\": \"275000\",\n                    \"displayValue\": \"Q4, $275K\"\n                }]\n            }\n        },\n        {\n            \"id\": \"cranberry\",\n            \"linkedchart\": {\n                \"chart\": {\n                    \"caption\": \"Cranberry Juice - Quarterly Sales\",\n                    \"subcaption\": \"Last year\",\n                    \"numberprefix\": \"$\",\n                    \"theme\": \"fusion\",\n                    \"plottooltext\": \"$label, $dataValue,  $percentValue\"\n                },\n                \"data\": [\n                    {\n                        \"label\": \"Q1\",\n                        \"value\": \"102000\",\n                        \"displayValue\": \"Q1, $102K\"\n                    },\n                    {\n                        \"label\": \"Q2\",\n                        \"value\": \"142000\",\n                        \"displayValue\": \"Q2, $142K\"\n                    },\n                    {\n                        \"label\": \"Q3\",\n                        \"value\": \"187000\",\n                        \"displayValue\": \"Q3, $187K\"\n                    },\n                    {\n                        \"label\": \"Q4\",\n                        \"value\": \"189000\",\n                        \"displayValue\": \"Q4, $189K\"\n                    }\n                ]\n            }\n        },\n        {\n            \"id\": \"grape\",\n            \"linkedchart\": {\n                \"chart\": {\n                    \"caption\": \"Grape Juice - Quarterly Sales\",\n                    \"subcaption\": \"Last year\",\n                    \"numberprefix\": \"$\",\n                    \"theme\": \"fusion\",\n                    \"rotateValues\": \"0\",\n                    \"plottooltext\": \"$label, $dataValue,  $percentValue\"\n                },\n                \"data\": [{\n                    \"label\": \"Q1\",\n                    \"value\": \"45000\",\n                    \"displayValue\": \"Q1, $45K\"\n                }, {\n                    \"label\": \"Q2\",\n                    \"value\": \"72000\",\n                    \"displayValue\": \"Q2, $72K\"\n                }, {\n                    \"label\": \"Q3\",\n                    \"value\": \"95000\",\n                    \"displayValue\": \"Q3, $95K\"\n                }, {\n                    \"label\": \"Q4\",\n                    \"value\": \"108000\",\n                    \"displayValue\": \"Q4, $108K\"\n                }]\n            }\n        }\n    ]\n}\n"
  },
  "simple-gauge": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\nvar FusionCharts = require('fusioncharts');\nvar Widgets = require('fusioncharts/fusioncharts.widgets');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nWidgets(FusionCharts);  // Resolve Widgets as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        type: 'angulargauge',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: { /* see data tab */ }\n    });\n});\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Widgets = require('/path/to/fusioncharts/fusioncharts.widget.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Nordstorm's Customer Satisfaction Score for 2017\",\r\n        \"lowerLimit\": \"0\",\r\n        \"upperLimit\": \"100\",\r\n        \"showValue\": \"1\",\r\n        \"numberSuffix\": \"%\",\r\n        \"theme\": \"fusion\",\r\n        \"showToolTip\": \"0\"\r\n    },\r\n    \"colorRange\": {\r\n        \"color\": [\r\n            {\r\n                \"minValue\": \"0\",\r\n                \"maxValue\": \"50\",\r\n                \"code\": \"#F2726F\"\r\n            }, {\r\n                \"minValue\": \"50\",\r\n                \"maxValue\": \"75\",\r\n                \"code\": \"#FFC533\"\r\n            }, {\r\n                \"minValue\": \"75\",\r\n                \"maxValue\": \"100\",\r\n                \"code\": \"#62B58F\"\r\n            }\r\n        ]\r\n    },\r\n    \"dials\": {\r\n        \"dial\": [\r\n            {\r\n                \"value\": \"81\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n"
  },
  "world-map": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Maps = require('fusioncharts/fusioncharts.maps');\nvar World = require('fusioncharts/maps/fusioncharts.world');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\njQueryFusionCharts(FusionCharts);\n\nMaps(FusionCharts); // Resolve Maps as dependency for FusionCharts\nWorld(FusionCharts); // Resolve World Map Definition as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        type: 'world',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: { /* see data tab */ }\n    });\n});\n\n/* \n  NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Average Annual Population Growth\",\r\n        \"subcaption\": \" 1955-2015\",\r\n        \"numbersuffix\": \"%\",\r\n        \"includevalueinlabels\": \"1\",\r\n        \"labelsepchar\": \": \",\r\n        \"entityFillHoverColor\": \"#FFF9C4\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"colorrange\": {\r\n        \"minvalue\": \"0\",\r\n        \"code\": \"#FFE0B2\",\r\n        \"gradient\": \"1\",\r\n        \"color\": [\r\n            {\r\n                \"minvalue\": \"0.5\",\r\n                \"maxvalue\": \"1.0\",\r\n                \"color\": \"#FFD74D\"\r\n            },\r\n            {\r\n                \"minvalue\": \"1.0\",\r\n                \"maxvalue\": \"2.0\",\r\n                \"color\": \"#FB8C00\"\r\n            },\r\n            {\r\n                \"minvalue\": \"2.0\",\r\n                \"maxvalue\": \"3.0\",\r\n                \"color\": \"#E65100\"\r\n            }\r\n        ]\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"id\": \"NA\",\r\n            \"value\": \".82\",\r\n            \"showLabel\": \"1\"\r\n        },\r\n        {\r\n            \"id\": \"SA\",\r\n            \"value\": \"2.04\",\r\n            \"showLabel\": \"1\"\r\n        },\r\n        {\r\n            \"id\": \"AS\",\r\n            \"value\": \"1.78\",\r\n            \"showLabel\": \"1\"\r\n        },\r\n        {\r\n            \"id\": \"EU\",\r\n            \"value\": \".40\",\r\n            \"showLabel\": \"1\"\r\n        },\r\n        {\r\n            \"id\": \"AF\",\r\n            \"value\": \"2.58\",\r\n            \"showLabel\": \"1\"\r\n        },\r\n        {\r\n            \"id\": \"AU\",\r\n            \"value\": \"1.30\",\r\n            \"showLabel\": \"1\"\r\n        }\r\n    ]\r\n}\r\n"
  },
  "special-events": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n$('document').ready(function () {\n    var dataSource = { /* see data tab */},\n        prevValue,\n        curValue;\n\n    $('#chart-container').insertFusionCharts({\n        type: 'dragcolumn2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: dataSource\n    });\n\n    $('#chart-container').bind('fusionchartsdataplotdragend', function (event, args) {\n        prevValue = FusionCharts.formatNumber(args.startValue.toFixed(2));\n        curValue = FusionCharts.formatNumber(args.endValue.toFixed(2));\n        var label = dataSource.categories[0].category[args.dataIndex].label;\n        $('#message').html('<b>' + args.datasetName + '</b> dataset, its previous value was <b>'+ prevValue +'</b> and its current value is <b>' + curValue + '</b> for year ' +\n        '<b>'+ label + '</b>');\n    });\n});\n\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>\n<p style=\"padding: 10px; background: rgb(245, 242, 240);\" id=\'message\'>\n    Drag any column for years 2017 or 2018 to see updated value along with the label\n</p>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Android and iOS Devices Sales Projections\",\n        \"subCaption\": \"Drag the top of columns to adjust projections for 2017 & 2018\",\n        \"numberPrefix\": \"$\",\n        \"numberSuffix\": \"M\",\n        \"yaxismaxvalue\": \"200\",\n        \"theme\": \"fusion\",\n        \"plotToolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n    },\n    \"categories\": [{\n        \"category\": [{\n            \"label\": \"2014\",\n            \"fontItalic\": \"0\"\n        }, {\n            \"label\": \"2015\",\n            \"fontItalic\": \"0\"\n        }, {\n            \"label\": \"2016\",\n            \"fontItalic\": \"0\"\n        }, {\n            \"label\": \"2017 (Projected)\"\n        }, {\n            \"label\": \"2018 (Projected)\"\n        }]\n    }],\n    \"dataset\": [{\n        \"seriesname\": \"Android Devices\",\n        \"data\": [{\n            \"value\": \"73\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"80\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"97\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"110\",\n            \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n        }, {\n            \"value\": \"180\",\n            \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n        }]\n    }, {\n        \"seriesname\": \"iOS Devices\",\n        \"data\": [{\n            \"value\": \"63.2\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"68\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"82\",\n            \"alpha\": \"100\",\n            \"allowDrag\": \"0\"\n        }, {\n            \"value\": \"99\",\n            \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n        }, {\n            \"value\": \"150\",\n            \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n        }]\n    }]\n}"
  },
  "render-alert": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n\n$('document').ready(function () {\n    // bind beforeDataUpdate and dataUpdated events\n    $('#chart-container').bind('fusionchartsbeforedataupdate', function (event, args) {\n        $('#message').append('beforeDataUpdate, ');\n    });\n    $('#chart-container').bind('fusionchartsdataupdated', function (event, args) {\n        $('#message').append('dataUpdated, ');\n    });\n\n    $('#chart-container').insertFusionCharts({\n        type: 'column2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: { /* see data tab */}\n    });\n\n    // bind drawComplete and renderComplete events\n    $('#chart-container').bind('fusionchartsdrawcomplete', function (event, args) {\n        $('#message').append('drawComplete, ');\n    });\n    $('#chart-container').bind('fusionchartsrendercomplete', function (event, args) {\n        $('#message').append('renderComplete');\n    });\n});",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>\n<p style=\"padding: 10px; background: rgb(245, 242, 240);\" id=\"message\">\n    <b>Status:</b>\n</p>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n        \"subCaption\": \"In MMbbl = One Million barrels\",\r\n        \"xAxisName\": \"Country\",\r\n        \"yAxisName\": \"Reserves (MMbbl)\",\r\n        \"numberSuffix\": \"K\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n"
  },
  "dynamically-add-chart": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        type: 'column2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: { /* see data tab */ }\n    });\n\n    // Handlers for tracking click events\n    $('#track').click(function () {\n        $('#message').html('Click on the plot to see the value along with the label');\n        $('#chart-container').bind('fusionchartsdataplotclick', function (event, data) {\n            $('#message').html('You have clicked on plot <b>' + data.categoryLabel +\n                '</b> which has a value of <b>' + data.displayValue + '</b>');\n        });\n        $('#track').attr('disabled', 'disabled');\n        $('#reset').removeAttr('disabled');\n    });\n    $('#reset').click(function () {\n        $('#chart-container').unbind('fusionchartsdataplotclick');\n        $('#message').html('Click the below buttons to add an event dynamically to a chart');\n        $('#track').removeAttr('disabled');\n        $('#reset').attr('disabled', 'disabled');\n    });\n});",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>\n<div style=\"padding: 0px; background: rgb(255, 255, 255);\" id=\"message\">\n    Click the below buttons to add an event dynamically to the chart\n</div>\n<div style=\"display: flex; justify-content: center; margin: 0px\">\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"track\">ADD/LISTEN TO DATAPLOTCLICK EVENT</button>\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"reset\" disabled=\"true\">REMOVE DATAPLOTCLICK EVENT</button>\n</div>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\n        \"subCaption\": \"In MMbbl = One Million barrels\",\n        \"xAxisName\": \"Country\",\n        \"yAxisName\": \"Reserves (MMbbl)\",\n        \"numberSuffix\": \"K\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Venezuela\",\n            \"value\": \"290\"\n        },\n        {\n            \"label\": \"Saudi\",\n            \"value\": \"260\"\n        },\n        {\n            \"label\": \"Canada\",\n            \"value\": \"180\"\n        },\n        {\n            \"label\": \"Iran\",\n            \"value\": \"140\"\n        },\n        {\n            \"label\": \"Russia\",\n            \"value\": \"115\"\n        },\n        {\n            \"label\": \"UAE\",\n            \"value\": \"100\"\n        },\n        {\n            \"label\": \"US\",\n            \"value\": \"30\"\n        },\n        {\n            \"label\": \"China\",\n            \"value\": \"30\"\n        }\n    ]\n}"
  },
  "slice-data-plots": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        id: 'pie-slice-chart',\n        type: 'pie2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: { /* see data tab */ }\n    });\n\n    $('#chart-container').bind('fusionchartsdataplotclick', function (event, args) {\n        if (args.isSliced) {\n            $('#radioButton1').prop('checked', true);\n        } else {\n            $('#radioButton' + (args.index + 2)).prop('checked', true);\n        }\n    })\n\n    $('#radio1').click(function () {\n        for (var i in dataSource.data) {\n            FusionCharts.items['pie-slice-chart'].slicePlotItem(i, false)\n        }\n    });\n    $('#radio2').click(function () {\n        FusionCharts.items['pie-slice-chart'].slicePlotItem(0, true);\n    });\n    $('#radio3').click(function () {\n        FusionCharts.items['pie-slice-chart'].slicePlotItem(1, true);\n    });\n    $('#radio4').click(function () {\n        FusionCharts.items['pie-slice-chart'].slicePlotItem(2, true);\n    });\n    $('#radio5').click(function () {\n        FusionCharts.items['pie-slice-chart'].slicePlotItem(3, true);\n    });\n});\n\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>\n<div style=\"display: flex; justify-content: center; bottom: 2px;\">\n    <div class=\"change-type\">\n        <div id=\"radio1\">\n            <input name=\"slice-selecter\" id=\"radioButton1\" type=\"radio\" checked=\"checked\"/>\n            <label for=\"radioButton1\">None</label>\n        </div>\n        <div id=\"radio2\">\n            <input name=\"slice-selecter\" id=\"radioButton2\" type=\"radio\"/>\n            <label for=\"radioButton2\">Apache</label>\n        </div>\n        <div id=\"radio3\">\n            <input name=\"slice-selecter\" id=\"radioButton3\" type=\"radio\"/>\n            <label for=\"radioButton3\">Microsoft</label>\n        </div>\n        <div id=\"radio4\">\n            <input name=\"slice-selecter\" id=\"radioButton4\" type=\"radio\"/>\n            <label for=\"radioButton4\">Zeus</label>\n        </div>\n        <div id=\"radio5\">\n            <input name=\"slice-selecter\" id=\"radioButton5\" type=\"radio\"/>\n            <label for=\"radioButton5\">Other</label>\n        </div>\n    </div>\n</div>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Market Share of Web Servers\",\n        \"plottooltext\": \"<b>$percentValue</b> of web servers run on $label servers\",\n        \"showLegend\": \"1\",\n        \"showPercentValues\": \"1\",\n        \"legendPosition\": \"bottom\",\n        \"useDataPlotColorForLabels\": \"1\",\n        \"enablemultislicing\": \"0\",\n        \"showlegend\": \"0\",\n        \"theme\": \"fusion\",\n    },\n    \"data\": [{\n        \"label\": \"Apache\",\n        \"value\": \"32647479\"\n    }, {\n        \"label\": \"Microsoft\",\n        \"value\": \"22100932\"\n    }, {\n        \"label\": \"Zeus\",\n        \"value\": \"14376\"\n    }, {\n        \"label\": \"Other\",\n        \"value\": \"18674221\"\n    }]\n}"
  },
  "responsive-charts": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        id: 'resize-chart',\n        type: 'column2d',\n        width: '600',\n        height: '350',\n        dataFormat: 'json',\n        dataSource: { /* see data tab */ }\n    });\n\n    // Handlers for resizing the chart\n    $('#radio1').click(function (e) {\n      $('#chart-container').width(400).height(250);\n    });\n    $('#radio2').click(function (e) {\n      $('#chart-container').width(600).height(350);\n    });\n    $('#radio3').click(function (e) {\n      $('#chart-container').width(700).height(400);\n    });\n});\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>\n<div id=\"config-container\">\n    <span id=\"select-text\">Choose a dimension:</span>\n    <div class=\"change-type\">\n        <div id=\"radio1\">\n            <input name=\"dimension-selecter\" id=\"radioButton1\" type=\"radio\"/>\n            <label for=\"radioButton1\">400 &#10005; 250</label>\n        </div>\n        <div id=\"radio2\">\n            <input name=\"dimension-selecter\" id=\"radioButton2\" type=\"radio\" checked=\"checked\"/>\n            <label for=\"radioButton2\">600 &#10005; 350</label>\n        </div>\n        <div id=\"radio3\">\n            <input name=\"dimension-selecter\" id=\"radioButton3\" type=\"radio\"/>\n            <label for=\"radioButton3\">700 &#10005; 400</label>\n        </div>\n    </div>\n    </span>\n</div>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\n        \"subCaption\": \"In MMbbl = One Million barrels\",\n        \"xAxisName\": \"Country\",\n        \"yAxisName\": \"Reserves (MMbbl)\",\n        \"numberSuffix\": \"K\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Venezuela\",\n            \"value\": \"290\"\n        },\n        {\n            \"label\": \"Saudi\",\n            \"value\": \"260\"\n        },\n        {\n            \"label\": \"Canada\",\n            \"value\": \"180\"\n        },\n        {\n            \"label\": \"Iran\",\n            \"value\": \"140\"\n        },\n        {\n            \"label\": \"Russia\",\n            \"value\": \"115\"\n        },\n        {\n            \"label\": \"UAE\",\n            \"value\": \"100\"\n        },\n        {\n            \"label\": \"US\",\n            \"value\": \"30\"\n        },\n        {\n            \"label\": \"China\",\n            \"value\": \"30\"\n        }\n    ]\n}"
  },
  "change-chart-type": {
    "code": "/*\n Assuming you have installed fusioncharts using npm \n Following code snippet can be used to render chart.\n*/\n\nvar FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\n\nCharts(FusionCharts); // Resolve Charts as dependency for FusionCharts\nFusionTheme(FusionCharts); // Resolve Fusion theme as dependency for FusionCharts\njQueryFusionCharts(FusionCharts); // Resolve FusionCharts as dependency for jqueryFusionCharts\n\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        id: 'change-chart',\n        type: 'column2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: { /* see data tab */ }\n    });\n\n    // Handlers for changing the chart type\n    $('#radio1').click(function (e) {\n        FusionCharts.items['change-chart'].chartType('column2d');\n    });\n    $('#radio2').click(function (e) {\n        FusionCharts.items['change-chart'].chartType('bar2d');\n    });\n    $('#radio3').click(function (e) {\n        FusionCharts.items['change-chart'].chartType('line');\n    });\n});\n\n/* NOTE:\n  * In case you downloaded fusioncharts in zipped format \n  * var FusionCharts = require('/path/to/fusioncharts/fusioncharts.js');  \n  * var Charts = require('/path/to/fusioncharts/fusioncharts.charts.js');  \n  * var FusionTheme = require('/path/to/fusioncharts/fusioncharts.theme.fusion.js');\n*/",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>\n<div id=\"config-container\">\n    <span id=\"select-text\">Choose a chart:</span>\n    <div class=\"change-type\">\n        <div id=\"radio1\">\n            <input name=\"chart-selecter\" id=\"radioButton1\" type=\"radio\" checked=\"checked\"/>\n            <label for=\"radioButton1\">Column 2D Chart</label>\n        </div>\n        <div id=\"radio2\">\n            <input name=\"chart-selecter\" id=\"radioButton2\" type=\"radio\"/>\n            <label for=\"radioButton2\">Bar 2D Chart</label>\n        </div>\n        <div id=\"radio3\">\n            <input name=\"chart-selecter\" id=\"radioButton3\" type=\"radio\"/>\n            <label for=\"radioButton3\">Pie 2D Chart</label>\n        </div>\n    </div>\n</div>",
    "data": '{\n    "chart": {\n        "caption": "Recommended Portfolio Split",\n        "subCaption" : "For a net-worth of $1M",\n        "showValues":"1",\n        "showPercentInTooltip" : "0",\n        "numberPrefix" : "$",\n        "enableMultiSlicing":"1",\n        "theme": "fusion"\n    },\n    "data": [\n        {\n            "label": "Equity",\n            "value": "300000"\n        }, {\n            "label": "Debt",\n            "value": "230000"\n        }, {\n            "label": "Bullion",\n            "value": "180000"\n        }, {\n            "label": "Real-estate",\n            "value": "270000"\n        }, {\n            "label": "Insurance",\n            "value": "20000"\n        }\n    ]\n}'
  },
  "use-annotations": {
    "code": "var FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts);\nFusionTheme(FusionCharts);\njQueryFusionCharts(FusionCharts);\n\n$(\'document\').ready(function () {\n    $(\'#chart-container\').insertFusionCharts({\n        type: \'spline\',\n        width: \'600\',\n        height: \'400\',\n        dataFormat: \'json\',\n        dataSource: { /* see data tab */ }\n    });\n});",
    "html": "<div id=\"chart-container\">\n    FusionCharts will render here\n</div>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Bakersfield Central - Total footfalls\",\n        \"subCaption\": \"Last week\",\n        \"xAxisName\": \"Day\",\n        \"yAxisName\": \"No. of Visitors (In 1000s)\",\n        \"showValues\": \"0\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Mon\",\n            \"value\": \"15123\"\n        },\n        {\n            \"label\": \"Tue\",\n            \"value\": \"14233\"\n        },\n        {\n            \"label\": \"Wed\",\n            \"value\": \"25507\"\n        },\n        {\n            \"label\": \"Thu\",\n            \"value\": \"9110\"\n        },\n        {\n            \"label\": \"Fri\",\n            \"value\": \"15529\"\n        },\n        {\n            \"label\": \"Sat\",\n            \"value\": \"20803\"\n        },\n        {\n            \"label\": \"Sun\",\n            \"value\": \"19202\"\n        }\n    ],\n    \"annotations\": {\n        \"groups\": [\n            {\n                \"id\": \"anchor-highlight\",\n                \"items\": [\n                    {\n                        \"id\": \"high-star\",\n                        \"type\": \"circle\",\n                        \"x\": \"$dataset.0.set.2.x\",\n                        \"y\": \"$dataset.0.set.2.y\",\n                        \"radius\": \"12\",\n                        \"color\": \"#6baa01\",\n                        \"border\": \"2\",\n                        \"borderColor\": \"#f8bd19\"\n                    },\n                    {\n                        \"id\": \"label\",\n                        \"type\": \"text\",\n                        \"text\": \"Highest footfall 25.5K\",\n                        \"fillcolor\": \"#6baa01\",\n                        \"rotate\": \"90\",\n                        \"x\": \"$dataset.0.set.2.x+75\",\n                        \"y\": \"$dataset.0.set.2.y-2\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
  },
  "update-chart-attribute-through-method" : {
    "code": "var FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts);\nFusionTheme(FusionCharts);\njQueryFusionCharts(FusionCharts);\n\n$('document').ready(function () {\n    $('#chart-container').insertFusionCharts({\n        id: 'column-chart',\n        type: 'column2d',\n        width: '600',\n        height: '400',\n        dataFormat: 'json',\n        dataSource: { /* see data tab */ }\n    });\n\n    // Handlers for changing the theme using setChartAttribute method\n    $('#caption').click(function () {\n        FusionCharts.items['column-chart'].setChartAttribute('caption', 'CAPTION');\n    });\n    $('#xaxis-name').click(function () {\n        FusionCharts.items['column-chart'].setChartAttribute('xaxisname', 'X-AXIS NAME');\n    });\n    $('#yaxis-name').click(function () {\n        FusionCharts.items['column-chart'].setChartAttribute('yaxisname', 'Y-AXIS NAME');\n    });\n    $('#reset').click(function () {\n        var chart = FusionCharts.items['column-chart'];\n        chart.setChartAttribute('caption', 'Countries With Most Oil Reserves [2017-18]');\n        chart.setChartAttribute('xaxisname', 'Country');\n        chart.setChartAttribute('yaxisname', 'Reserves (MMbbl)');\n    });\n});",
    "html": "<div id=\"chart-container\"></div>\n<div style=\"justify-content: center; margin: 0px\">\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"caption\">CHANGE CAPTION TO: CAPTION</button>\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"xaxis-name\">CHANGE X_AXIS NAME TO: X-AXIS NAME</button>\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"yaxis-name\">CHANGE Y_AXIS NAME TO: Y-AXIS NAME</button>\n    <button class=\"btn btn-outline-secondary btn-sm\" id=\"reset\">RESET</button>\n</div>",
    "data": "{\n    \"chart\": {\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\n        \"subCaption\": \"In MMbbl = One Million barrels\",\n        \"xAxisName\": \"Country\",\n        \"yAxisName\": \"Reserves (MMbbl)\",\n        \"numberSuffix\": \"K\",\n        \"theme\": \"fusion\"\n    },\n    \"data\": [\n        {\n            \"label\": \"Venezuela\",\n            \"value\": \"290\"\n        },\n        {\n            \"label\": \"Saudi\",\n            \"value\": \"260\"\n        },\n        {\n            \"label\": \"Canada\",\n            \"value\": \"180\"\n        },\n        {\n            \"label\": \"Iran\",\n            \"value\": \"140\"\n        },\n        {\n            \"label\": \"Russia\",\n            \"value\": \"115\"\n        },\n        {\n            \"label\": \"UAE\",\n            \"value\": \"100\"\n        },\n        {\n            \"label\": \"US\",\n            \"value\": \"30\"\n        },\n        {\n            \"label\": \"China\",\n            \"value\": \"30\"\n        }\n    ]\n}"
  },
  "apply-theme": {
    "code": "var FusionCharts = require('fusioncharts');\nvar Charts = require('fusioncharts/fusioncharts.charts');\nvar FusionTheme = require('fusioncharts/themes/fusioncharts.theme.fusion');\nvar $ = require('jquery');\nvar jQueryFusionCharts = require('jquery-fusioncharts');\n\nCharts(FusionCharts);\nFusionTheme(FusionCharts);\njQueryFusionCharts(FusionCharts);\n\n$(\'document\').ready(function () {\n    $(\'#chart-container\').insertFusionCharts({\n        id: \'theme-chart\',\n        type: \'column2d\',\n        width: \'600\',\n        height: \'400\',\n        dataFormat: \'json\',\n        dataSource: { /* see data tab */ }\n    });\n\n    // Handlers for changing the theme using setChartAttribute method\n    $(\'#radio1\').click(function () {\n        FusionCharts.items[\'theme-chart\'].setChartAttribute(\'theme\', \'fusion\');\n    });\n    $(\'#radio2\').click(function () {\n        FusionCharts.items[\'theme-chart\'].setChartAttribute(\'theme\', \'gammel\');\n    });\n    $(\'#radio3\').click(function () {\n        FusionCharts.items[\'theme-chart\'].setChartAttribute(\'theme\', \'candy\');\n    });\n    $(\'#radio4\').click(function () {\n        FusionCharts.items[\'theme-chart\'].setChartAttribute(\'theme\', \'zune\');\n    });\n    $(\'#radio5\').click(function () {\n        FusionCharts.items[\'theme-chart\'].setChartAttribute(\'theme\', \'ocean\');\n    });\n    $(\'#radio6\').click(function () {\n        FusionCharts.items[\'theme-chart\'].setChartAttribute(\'theme\', \'carbon\');\n    });\n});",
    "html": "<div id=\"chart-container\"></div>\n<div style=\"display: flex; position: absolute; bottom: 2px;\">\n    <div id=\"select-text\">Choose a theme:</div>\n    <div class=\"change-type\">\n        <div id=\"radio1\">\n            <input name=\"theme-selecter\" id=\"radioButton1\" type=\"radio\" checked=\"checked\"/>\n            <label for=\"radioButton1\">Fusion</label>\n        </div>\n        <div id=\"radio2\">\n            <input name=\"theme-selecter\" id=\"radioButton2\" type=\"radio\"/>\n            <label for=\"radioButton2\">Gammel</label>\n        </div>\n        <div id=\"radio3\">\n            <input name=\"theme-selecter\" id=\"radioButton3\" type=\"radio\"/>\n            <label for=\"radioButton3\">Candy</label>\n        </div>\n        <div id=\"radio4\">\n            <input name=\"theme-selecter\" id=\"radioButton4\" type=\"radio\"/>\n            <label for=\"radioButton4\">Zune</label>\n        </div>\n        <div id=\"radio5\">\n            <input name=\"theme-selecter\" id=\"radioButton5\" type=\"radio\"/>\n            <label for=\"radioButton5\">Ocean</label>\n        </div>\n        <div id=\"radio6\">\n            <input name=\"theme-selecter\" id=\"radioButton6\" type=\"radio\"/>\n            <label for=\"radioButton6\">Carbon</label>\n        </div>\n    </div>\n</div>",
    "data": "{\r\n    \"chart\": {\r\n        \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\r\n        \"subCaption\": \"In MMbbl = One Million barrels\",\r\n        \"xAxisName\": \"Country\",\r\n        \"yAxisName\": \"Reserves (MMbbl)\",\r\n        \"numberSuffix\": \"K\",\r\n        \"theme\": \"fusion\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"label\": \"Venezuela\",\r\n            \"value\": \"290\"\r\n        },\r\n        {\r\n            \"label\": \"Saudi\",\r\n            \"value\": \"260\"\r\n        },\r\n        {\r\n            \"label\": \"Canada\",\r\n            \"value\": \"180\"\r\n        },\r\n        {\r\n            \"label\": \"Iran\",\r\n            \"value\": \"140\"\r\n        },\r\n        {\r\n            \"label\": \"Russia\",\r\n            \"value\": \"115\"\r\n        },\r\n        {\r\n            \"label\": \"UAE\",\r\n            \"value\": \"100\"\r\n        },\r\n        {\r\n            \"label\": \"US\",\r\n            \"value\": \"30\"\r\n        },\r\n        {\r\n            \"label\": \"China\",\r\n            \"value\": \"30\"\r\n        }\r\n    ]\r\n}\r\n"
  }
}
